name: Test

on:
  push:
    branches-ignore:
      - wheels
  pull_request:
    branches:
      - master
      - dev

jobs:
  test:
    name: Test (${{ matrix.os }}, py${{ matrix.python-version }}, tf${{ matrix.tensorflow }})
    runs-on: ${{ matrix.os }}
    # env:
    #     SETUPTOOLS_USE_DISTUTILS: stdlib
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, windows-latest, macos-latest]
        python-version: ['3.6', '3.7', '3.8', '3.9', '3.10', '3.11', '3.12']
        tensorflow: [1, 2]
        include:
            # https://docs.github.com/en/actions/using-jobs/using-a-matrix-for-your-jobs#expanding-or-adding-matrix-configurations
            #
          - tensorflow: 1
            package-extras: 'test,tf1'
          - tensorflow: 2
            package-extras: 'test'
            #
          - python-version: '3.9'
            deps-extra-pre: 'edt "numpy>=1.20"'
            #
          - python-version: '3.7'
            tensorflow: 1
            deps-extra-post: '".[bioimageio]"'
            #
          - os: ubuntu-20.04
            python-version: '>=3.12 <3.13'  # intentionally be different than '3.12' to cause an additional combination
            tensorflow: 2
            package-extras: 'test'
            deps-extra-pre: 'tf_keras'
            exec-extra: 'echo "TF_USE_LEGACY_KERAS=1" >> $GITHUB_ENV'
        exclude:
            # https://www.tensorflow.org/install/source#tested_build_configurations
          - python-version: '3.8'
            tensorflow: 1
          - python-version: '3.9'
            tensorflow: 1
          - python-version: '3.10'
            tensorflow: 1
          - python-version: '3.11'
            tensorflow: 1
          - python-version: '3.12'
            tensorflow: 1
          - os: windows-latest
            tensorflow: 1

    steps:
      - uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - run: python -m pip install --upgrade pip wheel setuptools
      - run: pip install "tensorflow==${{ matrix.tensorflow }}.*"
      - uses: actions/checkout@v4

      # - if: matrix.tensorflow == 1
      #   run: echo "package_extras=test,tf1" >> $GITHUB_ENV
      #   shell: bash
      # - if: matrix.tensorflow == 2
      #   run: echo "package_extras=test" >> $GITHUB_ENV
      #   shell: bash

      # - name: Install edt
      #   if: matrix.python-version == 3.9
      #   run: pip install edt "numpy>=1.20"

      # # should also work with clang, but there are 
      # # openmp-related symbol issues just when using Python 3.6?
      # - name: Use GCC on macOS
      #   if: startsWith(matrix.os, 'macos')
      #   run: |
      #     brew config
      #     brew install gcc@9
      #     echo "CC=/usr/local/bin/gcc-9" >> $GITHUB_ENV
      #     echo "CXX=/usr/local/bin/g++-9" >> $GITHUB_ENV

      - name: Install extra dependencies (pre package installation)
        if: ${{ matrix.deps-extra-pre }}
        run: pip install ${{ matrix.deps-extra-pre }}

      - name: Install package
        run: pip install ".[${{ matrix.package-extras }}]"

      - name: Install extra dependencies (post package installation)
        if: ${{ matrix.deps-extra-post }}
        run: pip install ${{ matrix.deps-extra-post }}

      - name: Run extra command
        if: ${{ matrix.exec-extra }}
        run: ${{ matrix.exec-extra }}
        shell: bash

      # - name: Install bioimage.io dependencies
      #   if: |
      #     matrix.python-version == 3.7 &&
      #     matrix.tensorflow == 1
      #   run: pip install ".[bioimageio]"

      - name: Disable PytestReturnNotNoneWarning (Python 3.7+)
        if: matrix.python-version != 3.6
        run: echo "PYTEST_ADDOPTS='-W ignore::pytest.PytestReturnNotNoneWarning'" >> $GITHUB_ENV
        shell: bash

      - run: pytest -m "not gpu"
